/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ComponentType } from "./interface/type.interface";
export namespace Components {
    interface DsProp {
        /**
          * 参数名称
         */
        "name": string;
        /**
          * 父节点
         */
        "parentEl": HTMLElement | ParentNode;
        /**
          * 参数类型
         */
        "type": 'string' | 'array' | 'json';
    }
    interface DsScript {
        /**
          * 父节点
         */
        "parentEl": HTMLElement | ParentNode;
    }
    interface Dsb5Alert {
        /**
          * 是否显示关闭按钮
         */
        "close"?: boolean;
        /**
          * 弹框的内容
         */
        "content": string;
        /**
          * 延迟关闭
         */
        "delay"?: null | number;
        /**
          * 弹框是否是浮动的
         */
        "fixed"?: boolean;
        /**
          * 是否显示
         */
        "show"?: boolean;
        /**
          * 显示弹框组件; 用法: dsb5.dsb5Alert.showAlert({content: '测试弹框'});
         */
        "showAlert": (opt: { content: string; type?: ComponentType; close?: boolean; delay?: number; }) => Promise<void>;
        /**
          * 弹框的类型
         */
        "type"?: ComponentType;
    }
    interface Dsb5Button {
        /**
          * 弹框的类型
         */
        "outline": boolean;
        /**
          * 按钮的类型
         */
        "type": ComponentType;
    }
    interface Dsb5FunctionExecute {
        /**
          * 需要执行的全局函数
         */
        "fun": string;
        /**
          * 需要执行函数的参数
         */
        "params": any[];
        /**
          * 执行函数的结果
         */
        "result": any[];
        /**
          * 执行次数
         */
        "time": number;
        /**
          * 展示用例的类型
         */
        "type": 'testCase';
    }
    interface Dsb5Tabs {
        "tabs": string[];
    }
    interface Dsb5Test {
        /**
          * 一个字符串参数
         */
        "prop": string;
        /**
          * 一个字符串数组参数1
         */
        "propArr": string[];
    }
    interface Dsb5WebcomponentShow {
        /**
          * 内容展示方式
         */
        "type": null | 'row';
    }
}
declare global {
    interface HTMLDsPropElement extends Components.DsProp, HTMLStencilElement {
    }
    var HTMLDsPropElement: {
        prototype: HTMLDsPropElement;
        new (): HTMLDsPropElement;
    };
    interface HTMLDsScriptElement extends Components.DsScript, HTMLStencilElement {
    }
    var HTMLDsScriptElement: {
        prototype: HTMLDsScriptElement;
        new (): HTMLDsScriptElement;
    };
    interface HTMLDsb5AlertElement extends Components.Dsb5Alert, HTMLStencilElement {
    }
    var HTMLDsb5AlertElement: {
        prototype: HTMLDsb5AlertElement;
        new (): HTMLDsb5AlertElement;
    };
    interface HTMLDsb5ButtonElement extends Components.Dsb5Button, HTMLStencilElement {
    }
    var HTMLDsb5ButtonElement: {
        prototype: HTMLDsb5ButtonElement;
        new (): HTMLDsb5ButtonElement;
    };
    interface HTMLDsb5FunctionExecuteElement extends Components.Dsb5FunctionExecute, HTMLStencilElement {
    }
    var HTMLDsb5FunctionExecuteElement: {
        prototype: HTMLDsb5FunctionExecuteElement;
        new (): HTMLDsb5FunctionExecuteElement;
    };
    interface HTMLDsb5TabsElement extends Components.Dsb5Tabs, HTMLStencilElement {
    }
    var HTMLDsb5TabsElement: {
        prototype: HTMLDsb5TabsElement;
        new (): HTMLDsb5TabsElement;
    };
    interface HTMLDsb5TestElement extends Components.Dsb5Test, HTMLStencilElement {
    }
    var HTMLDsb5TestElement: {
        prototype: HTMLDsb5TestElement;
        new (): HTMLDsb5TestElement;
    };
    interface HTMLDsb5WebcomponentShowElement extends Components.Dsb5WebcomponentShow, HTMLStencilElement {
    }
    var HTMLDsb5WebcomponentShowElement: {
        prototype: HTMLDsb5WebcomponentShowElement;
        new (): HTMLDsb5WebcomponentShowElement;
    };
    interface HTMLElementTagNameMap {
        "ds-prop": HTMLDsPropElement;
        "ds-script": HTMLDsScriptElement;
        "dsb5-alert": HTMLDsb5AlertElement;
        "dsb5-button": HTMLDsb5ButtonElement;
        "dsb5-function-execute": HTMLDsb5FunctionExecuteElement;
        "dsb5-tabs": HTMLDsb5TabsElement;
        "dsb5-test": HTMLDsb5TestElement;
        "dsb5-webcomponent-show": HTMLDsb5WebcomponentShowElement;
    }
}
declare namespace LocalJSX {
    interface DsProp {
        /**
          * 参数名称
         */
        "name": string;
        /**
          * 解析参数后回调事件
         */
        "onGetProp"?: (event: CustomEvent<{ key: string; value: any }>) => void;
        /**
          * 父节点
         */
        "parentEl"?: HTMLElement | ParentNode;
        /**
          * 参数类型
         */
        "type"?: 'string' | 'array' | 'json';
    }
    interface DsScript {
        /**
          * 解析参数后回调事件
         */
        "onGetExecute"?: (event: CustomEvent<any>) => void;
        /**
          * 父节点
         */
        "parentEl"?: HTMLElement | ParentNode;
    }
    interface Dsb5Alert {
        /**
          * 是否显示关闭按钮
         */
        "close"?: boolean;
        /**
          * 弹框的内容
         */
        "content": string;
        /**
          * 延迟关闭
         */
        "delay"?: null | number;
        /**
          * 弹框是否是浮动的
         */
        "fixed"?: boolean;
        /**
          * 弹框关闭事件
         */
        "onCloseEmit"?: (event: CustomEvent<boolean>) => void;
        /**
          * 是否显示
         */
        "show"?: boolean;
        /**
          * 弹框的类型
         */
        "type"?: ComponentType;
    }
    interface Dsb5Button {
        /**
          * 弹框的类型
         */
        "outline"?: boolean;
        /**
          * 按钮的类型
         */
        "type"?: ComponentType;
    }
    interface Dsb5FunctionExecute {
        /**
          * 需要执行的全局函数
         */
        "fun": string;
        /**
          * 需要执行函数的参数
         */
        "params"?: any[];
        /**
          * 执行函数的结果
         */
        "result"?: any[];
        /**
          * 执行次数
         */
        "time"?: number;
        /**
          * 展示用例的类型
         */
        "type"?: 'testCase';
    }
    interface Dsb5Tabs {
        "tabs"?: string[];
    }
    interface Dsb5Test {
        /**
          * 一个字符串参数
         */
        "prop"?: string;
        /**
          * 一个字符串数组参数1
         */
        "propArr"?: string[];
    }
    interface Dsb5WebcomponentShow {
        /**
          * 内容展示方式
         */
        "type"?: null | 'row';
    }
    interface IntrinsicElements {
        "ds-prop": DsProp;
        "ds-script": DsScript;
        "dsb5-alert": Dsb5Alert;
        "dsb5-button": Dsb5Button;
        "dsb5-function-execute": Dsb5FunctionExecute;
        "dsb5-tabs": Dsb5Tabs;
        "dsb5-test": Dsb5Test;
        "dsb5-webcomponent-show": Dsb5WebcomponentShow;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "ds-prop": LocalJSX.DsProp & JSXBase.HTMLAttributes<HTMLDsPropElement>;
            "ds-script": LocalJSX.DsScript & JSXBase.HTMLAttributes<HTMLDsScriptElement>;
            "dsb5-alert": LocalJSX.Dsb5Alert & JSXBase.HTMLAttributes<HTMLDsb5AlertElement>;
            "dsb5-button": LocalJSX.Dsb5Button & JSXBase.HTMLAttributes<HTMLDsb5ButtonElement>;
            "dsb5-function-execute": LocalJSX.Dsb5FunctionExecute & JSXBase.HTMLAttributes<HTMLDsb5FunctionExecuteElement>;
            "dsb5-tabs": LocalJSX.Dsb5Tabs & JSXBase.HTMLAttributes<HTMLDsb5TabsElement>;
            "dsb5-test": LocalJSX.Dsb5Test & JSXBase.HTMLAttributes<HTMLDsb5TestElement>;
            "dsb5-webcomponent-show": LocalJSX.Dsb5WebcomponentShow & JSXBase.HTMLAttributes<HTMLDsb5WebcomponentShowElement>;
        }
    }
}
